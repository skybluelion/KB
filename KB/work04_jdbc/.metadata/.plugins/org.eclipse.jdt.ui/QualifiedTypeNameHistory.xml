<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.io.BufferedReader"/>
    <fullyQualifiedTypeName name="java.io.InputStreamReader"/>
    <fullyQualifiedTypeName name="java.io.BufferedWriter"/>
    <fullyQualifiedTypeName name="java.io.OutputStreamWriter"/>
    <fullyQualifiedTypeName name="java.lang.ClassNotFoundException"/>
    <fullyQualifiedTypeName name="java.sql.Connection"/>
    <fullyQualifiedTypeName name="com.jdbc.dao.CustomerDAO"/>
    <fullyQualifiedTypeName name="com.jdbc.test.CustomerDAOImplTest"/>
    <fullyQualifiedTypeName name="com.jdbc.dao.CustomerDAOImpl"/>
    <fullyQualifiedTypeName name="com.jdbc.domain.Customer"/>
    <fullyQualifiedTypeName name="com.jdbc.exception.DuplicateSSNException"/>
    <fullyQualifiedTypeName name="java.sql.SQLException"/>
    <fullyQualifiedTypeName name="jdbc.dao.MemberDAO"/>
    <fullyQualifiedTypeName name="jdbc.exception.DuplicateIDException"/>
    <fullyQualifiedTypeName name="com.jdbc.exception.RecordNotFoundException"/>
    <fullyQualifiedTypeName name="jdbc.client.MemberDAOImplTest"/>
    <fullyQualifiedTypeName name="jdbc.dao.impl.MemberDAOImpl"/>
    <fullyQualifiedTypeName name="jdbc.dto.Member"/>
    <fullyQualifiedTypeName name="jdbc.exception.RecordNotFoundException"/>
    <fullyQualifiedTypeName name="broker.twotier.dao.DatabaseTemplate"/>
    <fullyQualifiedTypeName name="java.sql.DriverManager"/>
    <fullyQualifiedTypeName name="config.ServerInfo"/>
    <fullyQualifiedTypeName name="broker.twotier.exception.DuplicateSSNException"/>
    <fullyQualifiedTypeName name="broker.twotier.exception.RecordNotFoundException"/>
    <fullyQualifiedTypeName name="broker.twotier.vo.SharesRec"/>
    <fullyQualifiedTypeName name="javax.security.auth.PrivateCredentialPermission"/>
    <fullyQualifiedTypeName name="java.sql.PreparedStatement"/>
    <fullyQualifiedTypeName name="java.sql.ResultSet"/>
    <fullyQualifiedTypeName name="broker.twotier.vo.StockRec"/>
    <fullyQualifiedTypeName name="java.math.BigInteger"/>
    <fullyQualifiedTypeName name="java.util.StringTokenizer"/>
</qualifiedTypeNameHistroy>
