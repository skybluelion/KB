import java.io.*;
import java.util.*;

public class Main {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		int N = Integer.parseInt(st.nextToken());
//		Stack<Integer> stk = new Stack<>();
//		ArrayList<Integer> list = new ArrayList<>();
		Deque<Integer> q = new LinkedList<>();
		
		
		for (int i = 0; i < N; i++) {
		st = new StringTokenizer(br.readLine());
		String str = st.nextToken();
		switch(str) {
		case "push":
			q.offer(Integer.parseInt(st.nextToken()));
			break;
		case "pop":
			if(q.isEmpty()) bw.write(-1+"\n");
			else {
				int A = q.poll();
				bw.write(A+"\n");	
			}
			break;
		case "size":
			bw.write(q.size()+"\n"); 
			break;
		case "empty":
			if(q.isEmpty()) bw.write(1+"\n");
			else bw.write(0+"\n");
			break;
		case "front":
			if(q.isEmpty()) bw.write(-1+"\n");
			else bw.write(q.peek()+"\n");
			break;
		default:
			if(q.isEmpty()) bw.write(-1+"\n");
			else bw.write(q.lastElement()+"\n");
			break;
		}
		
//		for (int i = 0; i < N; i++) {
//			st = new StringTokenizer(br.readLine());
//			String str = st.nextToken();
//			switch(str) {
//			case "back":
//				if(list.isEmpty()) bw.write(-1+"\n");
//				else bw.write(list.get(list.size()-1)+"\n");
//				break;
//			case "pop":
//				if(list.isEmpty()) bw.write(-1+"\n");
//				else {
//					int A = list.remove(0);
//					bw.write(A+"\n");	
//				}
//				break;
//			case "size":
//				bw.write(list.size()+"\n"); 
//				break;
//			case "empty":
//				if(list.isEmpty()) bw.write(1+"\n");
//				else bw.write(0+"\n");
//				break;
//			case "front":
//				if(list.isEmpty()) bw.write(-1+"\n");
//				else bw.write(list.get(0)+"\n");
//				break;
//			default:
//				list.add(Integer.parseInt(st.nextToken()));
//				break;
//			}
		
//		for (int i = 0; i < N; i++) {
//			st = new StringTokenizer(br.readLine());
//			String str = st.nextToken();
//			switch(str) {
//			case "push":
//				stk.push(Integer.parseInt(st.nextToken()));
//				break;
//			case "pop":
//				if(stk.isEmpty()) bw.write(-1+"\n");
//				else {
//					int A = stk.remove(0);
//					bw.write(A+"\n");	
//				}
//				break;
//			case "size":
//				bw.write(stk.size()+"\n"); 
//				break;
//			case "empty":
//				if(stk.isEmpty()) bw.write(1+"\n");
//				else bw.write(0+"\n");
//				break;
//			case "front":
//				if(stk.isEmpty()) bw.write(-1+"\n");
//				else bw.write(stk.firstElement()+"\n");
//				break;
//			default:
//				if(stk.isEmpty()) bw.write(-1+"\n");
//				else bw.write(stk.lastElement()+"\n");
//				break;
//			}
			
			
			
			
//			if(str.equals("push")) {
//				stk.push(Integer.parseInt(st.nextToken()));
//				continue;
//			}
//			else if(str.equals("pop")) {
//				if(stk.isEmpty()) bw.write(-1+"\n");
//				else {
//					int A = stk.remove(0);
//					bw.write(A+"\n");	
//				}
//				continue;
//			}
//			else if(str.equals("size")) {
//				bw.write(stk.size()+"\n"); 
//				continue;
//			}
//			else if(str.equals("empty")) {
//				if(stk.isEmpty()) bw.write(1+"\n");
//				else bw.write(0+"\n");
//				continue;
//			} else if(str.equals("front")) {
//				if(stk.isEmpty()) bw.write(-1+"\n");
//				else bw.write(stk.firstElement()+"\n");
//				continue;
//			} else if(str.equals("back")) {
//				if(stk.isEmpty()) bw.write(-1+"\n");
//				else bw.write(stk.lastElement()+"\n");
//				continue;
//			}
		}
		
		bw.flush();
		bw.close();
		br.close();
	}
}